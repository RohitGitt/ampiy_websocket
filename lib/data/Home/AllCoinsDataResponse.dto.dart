///
/// Code generated by @404shades https://github.com/404shades/jsonToDartModel/
///
const String _jsonKeyAllCoinsDataResponseDTOStream = 'stream';
const String _jsonKeyAllCoinsDataResponseDTOData = 'data';
const String _jsonKeyAllCoinsDataResponseDTODataT = 'T';
const String _jsonKeyAllCoinsDataResponseDTODataS = 's';
const String _jsonKeyAllCoinsDataResponseDTODataP = 'p';
const String _jsonKeyAllCoinsDataResponseDTODataPcp = 'Pcp';
const String _jsonKeyAllCoinsDataResponseDTODataC = 'c';
const String _jsonKeyAllCoinsDataResponseDTODataO = 'o';
const String _jsonKeyAllCoinsDataResponseDTODataH = 'h';
const String _jsonKeyAllCoinsDataResponseDTODataL = 'l';
const String _jsonKeyAllCoinsDataResponseDTODataB = 'b';
const String _jsonKeyAllCoinsDataResponseDTODataA = 'a';

class AllCoinsDataResponseDTOData {
/*
{
  "T": "fpTckr",
  "s": "BTCINR",
  "p": "-1351.78000000",
  "Pcp": "-2.740",
  "c": "3615589.2020",
  "o": "3717432.3072",
  "h": "3744326.4270",
  "l": "3595768.0014",
  "b": "3615139.4222",
  "a": "3615372.2228"
} 
*/

  String? T;
  String? s;
  String? p;
  String? Pcp;
  String? c;
  String? o;
  String? h;
  String? l;
  String? b;
  String? a;

  AllCoinsDataResponseDTOData({
    this.T,
    this.s,
    this.p,
    this.Pcp,
    this.c,
    this.o,
    this.h,
    this.l,
    this.b,
    this.a,
  });
  AllCoinsDataResponseDTOData.fromJson(Map<String, dynamic> json) {
    T = json[_jsonKeyAllCoinsDataResponseDTODataT]?.toString();
    s = json[_jsonKeyAllCoinsDataResponseDTODataS]?.toString();
    p = json[_jsonKeyAllCoinsDataResponseDTODataP]?.toString();
    Pcp = json[_jsonKeyAllCoinsDataResponseDTODataPcp]?.toString();
    c = json[_jsonKeyAllCoinsDataResponseDTODataC]?.toString();
    o = json[_jsonKeyAllCoinsDataResponseDTODataO]?.toString();
    h = json[_jsonKeyAllCoinsDataResponseDTODataH]?.toString();
    l = json[_jsonKeyAllCoinsDataResponseDTODataL]?.toString();
    b = json[_jsonKeyAllCoinsDataResponseDTODataB]?.toString();
    a = json[_jsonKeyAllCoinsDataResponseDTODataA]?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (T != null) {
      data[_jsonKeyAllCoinsDataResponseDTODataT] = T;
    }
    if (s != null) {
      data[_jsonKeyAllCoinsDataResponseDTODataS] = s;
    }
    if (p != null) {
      data[_jsonKeyAllCoinsDataResponseDTODataP] = p;
    }
    if (Pcp != null) {
      data[_jsonKeyAllCoinsDataResponseDTODataPcp] = Pcp;
    }
    if (c != null) {
      data[_jsonKeyAllCoinsDataResponseDTODataC] = c;
    }
    if (o != null) {
      data[_jsonKeyAllCoinsDataResponseDTODataO] = o;
    }
    if (h != null) {
      data[_jsonKeyAllCoinsDataResponseDTODataH] = h;
    }
    if (l != null) {
      data[_jsonKeyAllCoinsDataResponseDTODataL] = l;
    }
    if (b != null) {
      data[_jsonKeyAllCoinsDataResponseDTODataB] = b;
    }
    if (a != null) {
      data[_jsonKeyAllCoinsDataResponseDTODataA] = a;
    }
    return data;
  }

    @override
  String toString() {
    return 'AllCoinsDataResponseDTOData(T: $T, s: $s, p: $p, Pcp: $Pcp, c: $c, o: $o, h: $h, l: $l, b: $b, a: $a)';
  }
}

class AllCoinsDataResponseDTO {
/*
{
  "stream": "all@fpTckr",
  "data": [
    {
      "T": "fpTckr",
      "s": "BTCINR",
      "p": "-1351.78000000",
      "Pcp": "-2.740",
      "c": "3615589.2020",
      "o": "3717432.3072",
      "h": "3744326.4270",
      "l": "3595768.0014",
      "b": "3615139.4222",
      "a": "3615372.2228"
    }
  ]
} 
*/

  String? stream;
  List<AllCoinsDataResponseDTOData?>? data;

  AllCoinsDataResponseDTO({
    this.stream,
    this.data,
  });
  AllCoinsDataResponseDTO.fromJson(Map<String, dynamic> json) {
    stream = json[_jsonKeyAllCoinsDataResponseDTOStream]?.toString();
    if (json[_jsonKeyAllCoinsDataResponseDTOData] != null &&
        (json[_jsonKeyAllCoinsDataResponseDTOData] is List)) {
      final v = json[_jsonKeyAllCoinsDataResponseDTOData];
      final arr0 = <AllCoinsDataResponseDTOData>[];
      v.forEach((v) {
        arr0.add(AllCoinsDataResponseDTOData.fromJson(v));
      });
      this.data = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (stream != null) {
      data[_jsonKeyAllCoinsDataResponseDTOStream] = stream;
    }
    if (this.data != null) {
      final v = this.data;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data[_jsonKeyAllCoinsDataResponseDTOData] = arr0;
    }
    return data;
  }
}
